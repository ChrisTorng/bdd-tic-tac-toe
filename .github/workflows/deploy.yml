name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      preview:
        description: 'Deploy Preview environment'
        required: false
        default: 'false'

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Run BDD tests
        run: npm run test:bdd
      - name: Build static site
        run: npm run build
      - name: Verify Vercel secrets
        run: |
          if [ -z "$VERCEL_TOKEN" ] || [ -z "$VERCEL_ORG_ID" ] || [ -z "$VERCEL_PROJECT_ID" ]; then
            echo "Missing Vercel configuration. Set VERCEL_TOKEN, VERCEL_ORG_ID, and VERCEL_PROJECT_ID secrets." >&2
            exit 1
          fi
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Determine deployment target
        id: target
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.preview }}" = "true" ]; then
            echo "environment=preview" >> "$GITHUB_OUTPUT"
            echo "prod_flag=" >> "$GITHUB_OUTPUT"
          else
            echo "environment=production" >> "$GITHUB_OUTPUT"
            echo "prod_flag=--prod" >> "$GITHUB_OUTPUT"
          fi
      - name: Pull Vercel environment
        run: vercel pull --yes --environment=${{ steps.target.outputs.environment }} --token=$VERCEL_TOKEN
      - name: Build Vercel project
        run: vercel build ${{ steps.target.outputs.prod_flag }} --token=$VERCEL_TOKEN
      - name: Deploy to Vercel
        run: vercel deploy --prebuilt ${{ steps.target.outputs.prod_flag }} --token=$VERCEL_TOKEN
